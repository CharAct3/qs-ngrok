---

- hosts: all
  remote_user: root

  pre_tasks:
    - name: Install python for server
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python)

  tasks:
    - name: Mkdir /tmp/qs-ngrok
      file:
        path: /tmp/qs-ngrok
        state: directory

    - name: Build ngrok image
      shell: >
        docker build -t qs-ngrok --build-arg ngrok_domain={{ domain }}
        --build-arg goos={{ goos }} --build-arg goarch={{ goarch }}
        https://raw.githubusercontent.com/charact3/qs-ngrok/master/docker/Dockerfile

        #    - name: Build ngrok client
        #      docker_container:
        #        image: qs-ngrok
        #        name: qs-ngrok-client
        #        state: started
        #        command: /bin/sh -c "cd /ngrok && GOOS=darwin make release-client && sleep 100000"
        #      tags: [client]

    - name: Run ngrok server
      docker_container:
        image: qs-ngrok
        name: qs-ngrok
        state: started
        restart: yes
        ports:
          - "{{ http_port }}:{{ http_port }}"
          - "{{ https_port }}:{{ https_port }}"
          - "{{ tunnel_port }}:{{ tunnel_port }}"
        env:
          DOMAIN: "{{ domain }}"
          TUNNEL_PORT: "{{ tunnel_port }}"
          HTTP_PORT: "{{ http_port }}"
          HTTPS_PORT: "{{ https_port }}"
        command: "/bin/sh -c /ngrok/run_server.sh"
      tags:
        - start_ngrok

    - name: Docker copy ngrok client
      shell: docker cp qs-ngrok:/ngrok/bin /tmp/qs-ngrok/
      tags: [client]

    - name: Fetch ngrok client
      fetch:
        src: /tmp/qs-ngrok/bin/{{ goos }}_{{ goarch }}/{{ 'ngrok.exe' if goos == 'windows' else 'ngrok'}}
        dest: ./
        flat: yes
      tags: [client]

    - name: Create ngrok config
      local_action: template src=ngrok.cfg.j2 dest=ngrok.cfg
      tags: [client]
